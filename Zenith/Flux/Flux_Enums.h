#pragma once

#define MAX_FRAMES_IN_FLIGHT 2
#define FLUX_MAX_TARGETS 8
#define FLUX_MAX_DESCRIPTOR_BINDINGS 16
#define FLUX_MAX_DESCRIPTOR_SET_LAYOUTS 5

enum CommandType
{
	COMMANDTYPE_GRAPHICS,
	COMMANDTYPE_COMPUTE,
	COMMANDTYPE_COPY,
	COMMANDTYPE_PRESENT,
	COMMANDTYPE_MAX
};

enum AllocationType
{
	ALLOCATION_TYPE_BUFFER,
	ALLOCATION_TYPE_TEXTURE,
};

enum RenderOrder
{
	RENDER_ORDER_MEMORY_UPDATE,
	RENDER_ORDER_CSM,
	RENDER_ORDER_SKYBOX,
	RENDER_ORDER_OPAQUE_MESHES,
	RENDER_ORDER_TERRAIN,
	RENDER_ORDER_SKINNED_MESHES,
	RENDER_ORDER_FOLIAGE,
	RENDER_ORDER_APPLY_LIGHTING,
	RENDER_ORDER_POINT_LIGHTS,
	RENDER_ORDER_WATER,
	RENDER_ORDER_SSAO,
	RENDER_ORDER_FOG,
	RENDER_ORDER_SDFS,
	RENDER_ORDER_PARTICLES,
	RENDER_ORDER_QUADS,
	RENDER_ORDER_TEXT,
	RENDER_ORDER_COMPUTE_TEST,
	RENDER_ORDER_COPYTOFRAMEBUFFER,
	RENDER_ORDER_MAX
};

#if 0
enum TextureFormat
{
	TEXTURE_FORMAT_RGBA,
	TEXTURE_FORMAT_BGRA,
	TEXTURE_FORMAT_RGB,
	TEXTURE_FORMAT_D,
	TEXTURE_FORMAT_DS,
	TEXTURE_FORMAT_COUNT,
};
#endif

enum TextureFormat
{
	TEXTURE_FORMAT_NONE,

	TEXTURE_FORMAT_COLOUR_BEGIN,//////////////////////
	TEXTURE_FORMAT_RGB8_UNORM,
	TEXTURE_FORMAT_RGBA8_UNORM,
	TEXTURE_FORMAT_BGRA8_SRGB,
	TEXTURE_FORMAT_R16G16B16A16_UNORM,
	TEXTURE_FORMAT_BGRA8_UNORM,
	TEXTURE_FORMAT_R16G16B16A16_SFLOAT,
	TEXTURE_FORMAT_R32G32B32A32_SFLOAT,
	TEXTURE_FORMAT_R32G32B32_SFLOAT,
	TEXTURE_FORMAT_COLOUR_END,/////////////////////////

	TEXTURE_FORMAT_DEPTH_STENCIL_BEGIN,////////////////
	TEXTURE_FORMAT_D32_SFLOAT,
	TEXTURE_FORMAT_DEPTH_STENCIL_END,//////////////////
};

enum BlendFactor
{
	BLEND_FACTOR_DISABLED,
	BLEND_FACTOR_ZERO,
	BLEND_FACTOR_SRCALPHA,
	BLEND_FACTOR_ONEMINUSSRCALPHA,
	BLEND_FACTOR_ONE
};

enum DepthCompareFunc
{
	DEPTH_COMPARE_FUNC_DISABLED,
	DEPTH_COMPARE_FUNC_LESSEQUAL,
	DEPTH_COMPARE_FUNC_GREATEREQUAL,
	DEPTH_COMPARE_FUNC_NEVER,
	DEPTH_COMPARE_FUNC_ALWAYS
};

enum MeshTopology
{
	MESH_TOPOLOGY_NONE,
	MESH_TOPOLOGY_TRIANGLES,
	MESH_TOPOLOGY_TRIANGLESTRIPS,
};

enum ShaderDataType
{
	SHADER_DATA_TYPE_FLOAT,
	SHADER_DATA_TYPE_FLOAT2,
	SHADER_DATA_TYPE_FLOAT3,
	SHADER_DATA_TYPE_FLOAT4,
	SHADER_DATA_TYPE_INT,
	SHADER_DATA_TYPE_INT2,
	SHADER_DATA_TYPE_INT3,
	SHADER_DATA_TYPE_INT4,
	SHADER_DATA_TYPE_UINT,
	SHADER_DATA_TYPE_UINT2,
	SHADER_DATA_TYPE_UINT3,
	SHADER_DATA_TYPE_UINT4,
	SHADER_DATA_TYPE_MAT3,
	SHADER_DATA_TYPE_MAT4,
	SHADER_DATA_TYPE_BOOL,
	SHADER_DATA_TYPE_NONE
};

enum DescriptorType
{
	DESCRIPTOR_TYPE_BUFFER,
	DESCRIPTOR_TYPE_TEXTURE,
	DESCRIPTOR_TYPE_STORAGE_IMAGE,
	DESCRIPTOR_TYPE_ACCELERATION_STRUCTURE,
	DESCRIPTOR_TYPE_UNBOUNDED_TEXTURES,
	DESCRIPTOR_TYPE_MAX
};

enum LoadAction
{
	LOAD_ACTION_DONTCARE,
	LOAD_ACTION_LOAD,
	LOAD_ACTION_CLEAR
};

enum StoreAction
{
	STORE_ACTION_DONTCARE,
	STORE_ACTION_STORE,
};

enum RenderTargetUsage
{
	RENDER_TARGET_USAGE_RENDERTARGET,
	RENDER_TARGET_USAGE_SHADERREAD,
	RENDER_TARGET_USAGE_PRESENT
};

#if 0
enum RenderTargetType
{
	RENDER_TARGET_TYPE_COLOUR,
	RENDER_TARGET_TYPE_DEPTH,
	RENDER_TARGET_TYPE_DEPTHSTENCIL,
};
#endif

enum MemoryResidency
{
	MEMORY_RESIDENCY_CPU,
	MEMORY_RESIDENCY_GPU
};

enum BufferUsage
{
	BUFFER_USAGE_VERTEXBUFFER,
	BUFFER_USAGE_INDEXBUFFER
};

enum MRTIndex
{
	MRT_INDEX_DIFFUSE,
	MRT_INDEX_NORMALSAMBIENT,
	MRT_INDEX_MATERIAL,
	MRT_INDEX_COUNT,
};

enum MemoryFlags : u_int
{
	MEMORY_FLAGS__NONE = 0,
	MEMORY_FLAGS__SHADER_READ,
	MEMORY_FLAGS__UNORDERED_ACCESS,
};

enum ViewType
{
	VIEW_TYPE_SRV,  // Shader Resource View (read-only in shaders)
	VIEW_TYPE_UAV,  // Unordered Access View (read-write in compute shaders)
	VIEW_TYPE_RTV,  // Render Target View (color attachment for rendering)
	VIEW_TYPE_DSV,  // Depth Stencil View (depth/stencil attachment for rendering)
	VIEW_TYPE_MAX
};